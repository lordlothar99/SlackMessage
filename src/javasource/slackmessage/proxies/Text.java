// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package slackmessage.proxies;

public class Text
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject textMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SlackMessage.Text";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		TextType("TextType"),
		Text("Text"),
		Text_Block("SlackMessage.Text_Block");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Text(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SlackMessage.Text"));
	}

	protected Text(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject textMendixObject)
	{
		if (textMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("SlackMessage.Text", textMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SlackMessage.Text");

		this.textMendixObject = textMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Text.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static slackmessage.proxies.Text initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return slackmessage.proxies.Text.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static slackmessage.proxies.Text initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new slackmessage.proxies.Text(context, mendixObject);
	}

	public static slackmessage.proxies.Text load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return slackmessage.proxies.Text.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of TextType
	 * @param texttype
	 */
	public final slackmessage.proxies.EnumTextType getTextType()
	{
		return getTextType(getContext());
	}

	/**
	 * @param context
	 * @return value of TextType
	 */
	public final slackmessage.proxies.EnumTextType getTextType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.TextType.toString());
		if (obj == null)
			return null;

		return slackmessage.proxies.EnumTextType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of TextType
	 * @param texttype
	 */
	public final void setTextType(slackmessage.proxies.EnumTextType texttype)
	{
		setTextType(getContext(), texttype);
	}

	/**
	 * Set value of TextType
	 * @param context
	 * @param texttype
	 */
	public final void setTextType(com.mendix.systemwideinterfaces.core.IContext context, slackmessage.proxies.EnumTextType texttype)
	{
		if (texttype != null)
			getMendixObject().setValue(context, MemberNames.TextType.toString(), texttype.toString());
		else
			getMendixObject().setValue(context, MemberNames.TextType.toString(), null);
	}

	/**
	 * @return value of Text
	 */
	public final java.lang.String getText()
	{
		return getText(getContext());
	}

	/**
	 * @param context
	 * @return value of Text
	 */
	public final java.lang.String getText(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Text.toString());
	}

	/**
	 * Set value of Text
	 * @param text
	 */
	public final void setText(java.lang.String text)
	{
		setText(getContext(), text);
	}

	/**
	 * Set value of Text
	 * @param context
	 * @param text
	 */
	public final void setText(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String text)
	{
		getMendixObject().setValue(context, MemberNames.Text.toString(), text);
	}

	/**
	 * @return value of Text_Block
	 */
	public final slackmessage.proxies.Block getText_Block() throws com.mendix.core.CoreException
	{
		return getText_Block(getContext());
	}

	/**
	 * @param context
	 * @return value of Text_Block
	 */
	public final slackmessage.proxies.Block getText_Block(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		slackmessage.proxies.Block result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Text_Block.toString());
		if (identifier != null)
			result = slackmessage.proxies.Block.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Text_Block
	 * @param text_block
	 */
	public final void setText_Block(slackmessage.proxies.Block text_block)
	{
		setText_Block(getContext(), text_block);
	}

	/**
	 * Set value of Text_Block
	 * @param context
	 * @param text_block
	 */
	public final void setText_Block(com.mendix.systemwideinterfaces.core.IContext context, slackmessage.proxies.Block text_block)
	{
		if (text_block == null)
			getMendixObject().setValue(context, MemberNames.Text_Block.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Text_Block.toString(), text_block.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return textMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final slackmessage.proxies.Text that = (slackmessage.proxies.Text) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SlackMessage.Text";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
